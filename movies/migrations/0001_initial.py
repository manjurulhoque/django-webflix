# Generated by Django 5.1.4 on 2025-01-08 14:58

import django.core.validators
import django.db.models.deletion
import movies.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("genres", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "categories",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("original_title", models.CharField(blank=True, max_length=255)),
                ("slug", models.SlugField(blank=True, unique=True)),
                (
                    "imdb",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(10.0),
                        ]
                    ),
                ),
                ("classification", models.IntegerField(help_text="Age classification")),
                ("year", models.IntegerField()),
                (
                    "duration",
                    models.IntegerField(help_text="Duration in minutes", null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("downloads", models.IntegerField(default=0)),
                ("views", models.IntegerField(default=0)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("release_date", models.DateField(blank=True, null=True)),
                ("director", models.CharField(blank=True, max_length=255, null=True)),
                ("writer", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "thumbnail",
                    models.ImageField(upload_to=movies.models.thumbnail_directory_path),
                ),
                (
                    "cover",
                    models.ImageField(upload_to=movies.models.cover_directory_path),
                ),
                ("trailer_url", models.URLField(blank=True, null=True)),
                ("is_free", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Draft"), ("published", "Published")],
                        default="draft",
                        max_length=10,
                    ),
                ),
                ("featured", models.BooleanField(default=False)),
                ("language", models.CharField(default="English", max_length=50)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("rating_avg", models.FloatField(blank=True, default=0, null=True)),
                ("rating_count", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Comma separated tags",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "production_company",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("awards", models.TextField(blank=True, null=True)),
                (
                    "meta_keywords",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("meta_description", models.TextField(blank=True, null=True)),
                ("actors", models.ManyToManyField(to="core.actor")),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="movies", to="movies.category"
                    ),
                ),
                ("genres", models.ManyToManyField(to="genres.genre")),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorites",
                        to="movies.movie",
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="MovieSubtitle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(max_length=50)),
                (
                    "subtitle_file",
                    models.FileField(upload_to=movies.models.subtitle_directory_path),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtitles",
                        to="movies.movie",
                    ),
                ),
            ],
            options={
                "ordering": ["language"],
            },
        ),
        migrations.CreateModel(
            name="MovieVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                (
                    "quality",
                    models.CharField(
                        choices=[
                            ("4K", "4K"),
                            ("1080p", "1080p"),
                            ("720p", "720p"),
                            ("480p", "480p"),
                            ("360p", "360p"),
                        ],
                        max_length=10,
                    ),
                ),
                ("video_url", models.URLField(blank=True)),
                ("size", models.FloatField(help_text="File size in MB")),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "encoding_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("encoding_progress", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                (
                    "duration",
                    models.IntegerField(help_text="Duration in seconds", null=True),
                ),
                ("bitrate", models.CharField(blank=True, max_length=20)),
                ("codec", models.CharField(blank=True, max_length=50)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="movies.movie",
                    ),
                ),
            ],
            options={
                "ordering": ["quality"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("broken", "Broken Video/Audio"),
                            ("subtitle", "Subtitle Issue"),
                            ("inappropriate", "Inappropriate Content"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("resolved", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
                ("resolved_date", models.DateTimeField(blank=True, null=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comment", models.TextField()),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="movies.movie",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="WatchHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "watched_duration",
                    models.IntegerField(
                        default=0, help_text="Duration watched in seconds"
                    ),
                ),
                ("completed", models.BooleanField(default=False)),
                ("last_watched", models.DateTimeField(auto_now=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Watch histories",
                "ordering": ["-last_watched"],
            },
        ),
        migrations.CreateModel(
            name="Watchlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_date", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-added_date"],
            },
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["-created"], name="movies_movi_created_4f7274_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(fields=["status"], name="movies_movi_status_ba6bc6_idx"),
        ),
        migrations.AddIndex(
            model_name="movie",
            index=models.Index(
                fields=["featured"], name="movies_movi_feature_2c3e62_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="favorite",
            unique_together={("movie", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="moviesubtitle",
            unique_together={("movie", "language")},
        ),
        migrations.AlterUniqueTogether(
            name="movievideo",
            unique_together={("movie", "quality")},
        ),
        migrations.AlterUniqueTogether(
            name="review",
            unique_together={("movie", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="watchlist",
            unique_together={("user", "movie")},
        ),
    ]
